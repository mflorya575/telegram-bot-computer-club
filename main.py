from aiogram import Bot, Dispatcher, executor, types
import asyncio
import logging
from aiogram.dispatcher.filters import Command, Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ —Ñ–∞–π–ª—ã
from config import *
from keyboards import *
import texts


# --------------------------------------------------------#
# –í–∞—à API —Ç–æ–∫–µ–Ω
api = API
logging.basicConfig(level=logging.INFO)
bot = Bot(token=api)
dp = Dispatcher(bot, storage=MemoryStorage())
# --------------------------------------------------------#


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã start
@dp.message_handler(commands=['start'])
async def start(message):
    await message.answer(f'‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n' + texts.start, reply_markup=start_kb)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û –Ω–∞—Å"
@dp.message_handler(Text(equals=['‚ÑπÔ∏è –û –Ω–∞—Å']))
async def about_us(message):
    await message.answer(texts.about_us, parse_mode='HTML', reply_markup=start_kb)

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–¶–µ–Ω—ã"
@dp.message_handler(Text(equals=['üìù –¶–µ–Ω—ã']))
async def price(message):
    await message.answer('<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —É—Å–ª—É–≥—É</b>', parse_mode='HTML', reply_markup=games_kb)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "GTA 5"
@dp.callback_query_handler(text='GTA 5')
async def gta5(call):
    await call.message.answer(texts.game_gta5, parse_mode='HTML', reply_markup=buy_kb)
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "RDR 2"
@dp.callback_query_handler(text='RDR 2')
async def rdr2(call):
    await call.message.answer(texts.game_rdr2, parse_mode='HTML', reply_markup=buy_kb)
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "Sims 4"
@dp.callback_query_handler(text='Sims 4')
async def sims4(call):
    await call.message.answer(texts.game_sims4, parse_mode='HTML', reply_markup=buy_kb)
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "CS 2"
@dp.callback_query_handler(text='CS 2')
async def cs2(call):
    await call.message.answer(texts.game_cs2, parse_mode='HTML', reply_markup=buy_kb)
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "Battlefield 4"
@dp.callback_query_handler(text='Battlefield 4')
async def battlefield(call):
    await call.message.answer(texts.game_battlefield, parse_mode='HTML', reply_markup=buy_kb)
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "Atomic Heart"
@dp.callback_query_handler(text='Atomic Heart')
async def atomic_heart(call):
    await call.message.answer(texts.game_atomic_heart, parse_mode='HTML', reply_markup=buy_kb)
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "Cyberpunk"
@dp.callback_query_handler(text='Cyberpunk')
async def cyberpunk(call):
    await call.message.answer(texts.game_cyberpunk, parse_mode='HTML', reply_markup=buy_kb)
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "Roblox"
@dp.callback_query_handler(text='Roblox')
async def roblox(call):
    await call.message.answer(texts.game_roblox, parse_mode='HTML', reply_markup=buy_kb)
    await call.answer()




if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
